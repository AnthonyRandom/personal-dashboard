@tailwind base;
@tailwind components;
@tailwind utilities;

/* Minimal Black & White Design System */

@layer base {
  :root {
    /* Pure minimal palette */
    --background: 0 0% 100%;
    --foreground: 0 0% 3%;

    --card: 0 0% 100%;
    --card-foreground: 0 0% 3%;

    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3%;

    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;

    --secondary: 0 0% 96%;
    --secondary-foreground: 0 0% 9%;

    --muted: 0 0% 96%;
    --muted-foreground: 0 0% 45%;

    --accent: 0 0% 96%;
    --accent-foreground: 0 0% 9%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 90%;
    --input: 0 0% 90%;
    --ring: 0 0% 9%;

    --radius: 0.75rem;

    /* Sidebar specific */
    --sidebar-background: 0 0% 100%;
    --sidebar-foreground: 0 0% 3%;
    --sidebar-primary: 0 0% 9%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 0 0% 96%;
    --sidebar-accent-foreground: 0 0% 9%;
    --sidebar-border: 0 0% 90%;
    --sidebar-ring: 0 0% 9%;

    /* Custom animation variables */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .dark {
    /* Dark theme - inverted minimal palette */
    --background: 0 0% 3%;
    --foreground: 0 0% 98%;

    --card: 0 0% 6%;
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 3%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;

    --secondary: 0 0% 10%;
    --secondary-foreground: 0 0% 98%;

    --muted: 0 0% 10%;
    --muted-foreground: 0 0% 65%;

    --accent: 0 0% 10%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62% 50%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 15%;
    --input: 0 0% 15%;
    --ring: 0 0% 98%;

    /* Dark sidebar */
    --sidebar-background: 0 0% 3%;
    --sidebar-foreground: 0 0% 98%;
    --sidebar-primary: 0 0% 98%;
    --sidebar-primary-foreground: 0 0% 9%;
    --sidebar-accent: 0 0% 10%;
    --sidebar-accent-foreground: 0 0% 98%;
    --sidebar-border: 0 0% 15%;
    --sidebar-ring: 0 0% 98%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
  }
}

@layer components {
  /* Smooth animations */
  .animate-fade-in {
    animation: fade-in 0.6s ease-out forwards;
  }

  .animate-slide-up {
    animation: slide-up 0.4s ease-out forwards;
  }

  .animate-scale-in {
    animation: scale-in 0.3s ease-out forwards;
  }

  .animate-slide-right {
    animation: slide-right 0.3s ease-in-out forwards;
  }

  .animate-slide-left {
    animation: slide-left 0.3s ease-in-out forwards;
  }

  .hover-lift {
    @apply transition-all duration-300 ease-out hover:scale-[1.02] hover:shadow-lg;
  }

  .hover-subtle {
    @apply transition-all duration-200 ease-out hover:bg-accent/50;
  }

  .focus-ring {
    @apply focus:ring-2 focus:ring-primary/20 focus:ring-offset-2 focus:ring-offset-background;
  }

  .interactive-element {
    @apply transition-all duration-200 ease-out hover:bg-accent/50 focus:ring-2 focus:ring-primary/20 focus:outline-none;
  }

  .sidebar-transition {
    @apply transition-all duration-300 ease-in-out;
  }

  .sidebar-content-transition {
    @apply transition-all duration-200 ease-in-out;
  }

  /* Widget base styling */
  .dashboard-widget {
    @apply bg-card border border-border rounded-xl p-6 hover-lift;
  }

  .dashboard-widget-compact {
    @apply bg-card border border-border rounded-lg p-4 hover-subtle;
  }
}

@layer base {
  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes scale-in {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes slide-right {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slide-left {
    from {
      opacity: 0;
      transform: translateX(20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
}

@layer utilities {
  /* Custom utility classes */
  .stagger-animation > * {
    animation-delay: calc(var(--stagger-delay, 0) * 100ms);
  }
  
  .focus-visible-ring {
    @apply focus-visible:ring-2 focus-visible:ring-primary/20 focus-visible:ring-offset-2 focus-visible:ring-offset-background;
  }

  /* Scoped overflow controls are handled per-component to avoid stacking/overlap */

  /* React Grid Layout custom styles */
  .react-grid-layout {
    position: relative;
    overflow: hidden;
  }
  
  .react-grid-item {
    transition: all 200ms ease;
    transition-property: left, top, width, height;
    overflow: hidden;
  }
  
  .react-grid-item.cssTransforms {
    transition-property: transform, width, height;
  }
  
  .react-grid-item > .react-resizable-handle {
    display: none !important;
    visibility: hidden !important;
    position: absolute;
    width: 0 !important;
    height: 0 !important;
    bottom: 0;
    right: 0;
    background: none !important;
    background-image: none !important;
    border: none !important;
    cursor: default !important;
    z-index: -1 !important;
    opacity: 0 !important;
    pointer-events: none !important;
    content: none !important;
  }

  /* Hide any UA default resize affordance on WebKit/Blink */
  .react-grid-item > .react-resizable-handle::-webkit-resizer {
    display: none !important;
  }

  /* Remove any default triangular arrow or assets from react-resizable */
  .react-resizable-handle,
  .react-resizable-handle::before,
  .react-resizable-handle::after {
    background: none !important;
    background-image: none !important;
    border: none !important;
    box-shadow: none !important;
    outline: none !important;
    mask: none !important;
    -webkit-mask: none !important;
    opacity: 0 !important;
    display: none !important;
    visibility: hidden !important;
    pointer-events: none !important;
  }
  
  /* Hide browser default resize cursors and handles completely */
  .react-resizable-handle::-webkit-resizer { 
    display: none !important; 
    visibility: hidden !important;
  }
  
  /* Additional rules to ensure no resize affordances appear */
  .react-grid-item .react-resizable-handle {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    pointer-events: none !important;
    content: none !important;
  }
  
  /* Target the exact selector that controls the corner arrow */
  .react-grid-item > .react-resizable-handle.react-resizable-handle-se {
    opacity: 0 !important;
    pointer-events: none !important;
    visibility: hidden !important;
    display: none !important;
    width: 0 !important;
    height: 0 !important;
    background: none !important;
    background-image: none !important;
    border: none !important;
    cursor: default !important;
  }
  
  /* Target all specific resize handle variants */
  .react-resizable-handle-se,
  .react-resizable-handle-s,
  .react-resizable-handle-e,
  .react-resizable-handle-n,
  .react-resizable-handle-w,
  .react-resizable-handle-ne,
  .react-resizable-handle-nw,
  .react-resizable-handle-sw,
  span.react-resizable-handle,
  div.react-resizable-handle {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    pointer-events: none !important;
    width: 0 !important;
    height: 0 !important;
    content: none !important;
    background: none !important;
    background-image: none !important;
    border: none !important;
  }
  
  /* Hide all possible resize handle pseudo-elements */
  .react-grid-item .react-resizable-handle:before,
  .react-grid-item .react-resizable-handle:after,
  .react-resizable-handle-se:before,
  .react-resizable-handle-se:after {
    display: none !important;
    visibility: hidden !important;
    content: none !important;
  }

  /* Invisible full-edge resize handles for better usability */
  .react-grid-item > .react-resizable-handle-e {
    top: 0;
    bottom: 0;
    right: 0;
    width: 8px;
    height: auto;
    background: none !important;
    background-image: none !important;
    cursor: e-resize;
    opacity: 0 !important;
  }

  .react-grid-item > .react-resizable-handle-s {
    left: 0;
    right: 0;
    bottom: 0;
    height: 8px;
    width: auto;
    background: none !important;
    background-image: none !important;
    cursor: s-resize;
    opacity: 0 !important;
  }

  /* Ensure resized widget appears above neighbors during interaction */
  .react-grid-item.react-resizable-resizing {
    z-index: 1000;
  }
  
  /* Hide all possible placeholder variations - nuclear approach */
  .react-grid-placeholder,
  .react-grid-item.react-grid-placeholder,
  .react-grid-layout .react-grid-placeholder,
  div.react-grid-placeholder,
  .layout .react-grid-placeholder,
  [class*="react-grid-placeholder"] {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    background: none !important;
    background-color: transparent !important;
    border: none !important;
    box-shadow: none !important;
    outline: none !important;
    width: 0 !important;
    height: 0 !important;
    position: absolute !important;
    left: -9999px !important;
    top: -9999px !important;
    z-index: -1 !important;
    user-select: none;
    pointer-events: none !important;
  }
  
  .drag-handle {
    cursor: move !important;
    user-select: none;
  }
  
  .drag-handle:active {
    cursor: grabbing !important;
  }
  
  /* Ensure widgets are fully visible during drag */
  .react-grid-item.react-draggable-dragging {
    z-index: 1000;
    overflow: hidden;
  }
  
  .widget-item {
    overflow: visible !important;
    height: 100%;
    width: 100%;
    position: relative;
  }

  /* Ensure proper spacing between widgets */
  .react-grid-layout {
    min-height: 100%;
  }

  /* Removed extra padding previously added for resize handle to match grid sizing precisely */
}
